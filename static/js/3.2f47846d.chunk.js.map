{"version":3,"sources":["components/moviedetailspage/Cast.js"],"names":["Cast","state","cast","movieId","this","props","match","params","getCast","then","data","setState","map","movieActors","profile_path","alt","name","src","character","id","Component"],"mappings":"kPAGqBA,E,4MACnBC,MAAQ,CACNC,KAAM,I,uDAGR,WAAqB,IAAD,OACVC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRK,YAAQL,GAASM,MAAK,SAAAC,GACpB,EAAKC,SAAS,CACZT,KAAMQ,EAAKR,Y,oBAKjB,WACE,OAAOE,KAAKH,MAAMC,KAAKU,KAAI,SAAAC,GACzB,OACE,gCACGA,EAAYC,cACX,qBACEC,IAAKF,EAAYG,KACjBC,IAtBI,kCAsBaJ,EAAYC,eAIjC,4BAAID,EAAYG,OAChB,4BAAIH,EAAYK,cATRL,EAAYM,W,GAjBIC","file":"static/js/3.2f47846d.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { getCast } from \"../../apiServices\";\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\nexport default class Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    getCast(movieId).then(data => {\n      this.setState({\n        cast: data.cast,\n      });\n    });\n  }\n\n  render() {\n    return this.state.cast.map(movieActors => {\n      return (\n        <div key={movieActors.id}>\n          {movieActors.profile_path && (\n            <img\n              alt={movieActors.name}\n              src={IMAGE_URL + movieActors.profile_path}\n            />\n          )}\n\n          <p>{movieActors.name}</p>\n          <p>{movieActors.character}</p>\n        </div>\n      );\n    });\n  }\n}\n"],"sourceRoot":""}